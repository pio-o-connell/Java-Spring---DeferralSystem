package com.grouptwo.controllers;

import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.util.Date;
import java.util.List;

import javax.servlet.ServletContext;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.ModelAndView;

import com.grouptwo.domain.Deferral;
import com.grouptwo.domain.Module;
import com.grouptwo.service.DeferralDAO;
import com.grouptwo.service.ModuleDAO;

@Controller
@RequestMapping("/deferral")
public class DeferralController {

	@Autowired
	DeferralDAO deferralDAO;
	@Autowired
	ModuleDAO moduleDAO;
	@Autowired
	private ServletContext servletContext;

	@RequestMapping(value = "/listall", method = RequestMethod.GET)
	public String listAll(ModelMap model) {
		Date date = new java.util.Date();
		List<Deferral> listDefferals = deferralDAO.listDeferrals();
		model.addAttribute("deferrals", listDefferals);
		model.addAttribute("now", date);
		return "displayDeferrals";
	}

	@RequestMapping(value = "/advancedlist", method = RequestMethod.GET)
	public String advancedSearch() {
		return "displayDeferralsByStudent";
	}

	@RequestMapping(value = "/advancedlist/studentId/{studentId}", method = RequestMethod.GET)
	public String listDeferralsByStudent(@PathVariable String studentId,
			ModelMap model) {
		Date date = new java.util.Date();
		List<Deferral> listDefferals = deferralDAO
				.listDeferralsByStudent(studentId);
		model.addAttribute("deferrals", listDefferals);
		model.addAttribute("now", date);
		return "displayDeferrals";

	}
	
	@RequestMapping(value = "/addModuleDeferral", method = RequestMethod.GET)
	public String addModuleDeferral(ModelMap model) {
		List<Module> listModules = moduleDAO.listModules();
		model.addAttribute("moduleList",listModules );
		model.addAttribute("deferral", new Deferral());
		return "newModuleDeferral";
	}
	
	@RequestMapping(value = "/addModuleDeferral", method = RequestMethod.POST)
	public String displayModuleDeferral(
			@ModelAttribute("deferral") Deferral deferral,BindingResult result, ModelMap model) {

		if (result.hasErrors()) {
			return "newModuleDeferral";
		}
		
		try{
		int crnNumber= Integer.parseInt(deferral.getProgrammeId());
		deferralDAO.createModuleDeferral(deferral.getStudentId(), deferral.getModuleId(), crnNumber);
		}
		catch (Exception e)
		{
			e.printStackTrace();
		}
		
		Date date = new java.util.Date();
		List<Deferral> listDefferals = deferralDAO.listDeferralsByStudent(deferral.getStudentId());
		model.addAttribute("deferrals", listDefferals);
		model.addAttribute("now", date);
		return "displayDeferrals";

	}
}