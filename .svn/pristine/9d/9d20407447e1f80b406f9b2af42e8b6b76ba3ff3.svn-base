package com.grouptwo.mvc;

import java.util.List;
import java.util.regex.Pattern;
import java.util.concurrent.TimeUnit;
import org.junit.*;
import org.junit.runner.RunWith;

import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.*;
import org.openqa.selenium.*;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.ApplicationContext;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.TestExecutionListeners;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
import org.springframework.test.context.support.DependencyInjectionTestExecutionListener;

import com.github.springtestdbunit.DbUnitTestExecutionListener;
import com.github.springtestdbunit.annotation.DatabaseOperation;
import com.github.springtestdbunit.annotation.DatabaseSetup;
import com.grouptwo.domain.Lecturer;
import com.grouptwo.repository.LecturerJdbcDaoSupport;
import com.grouptwo.repository.ProgrammeJdbcDaoSupport;



/**
 * The Class LecturerTest.
 * @author Dale Cusack
 */
@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration({ "classpath:configuration.xml" })
@TestExecutionListeners({ DependencyInjectionTestExecutionListener.class,
		DbUnitTestExecutionListener.class })

public class LecturerTest {
	
	/** The auto wire context. */
	@Autowired
	ApplicationContext autoWireContext;
	
	/** The lecturer jdbc dao support. */
	LecturerJdbcDaoSupport lecturerJdbcDaoSupport;

	/** The driver. */
	private WebDriver driver;
	
	/** The base url. */
	private String baseUrl;
	
	/** The verification errors. */
	private StringBuffer verificationErrors = new StringBuffer();


	  /**
  	 * Set up.
  	 * @author Dale Cusack
  	 * @throws Exception the exception
  	 */
  	@Before
	  public void setUp() throws Exception {
	    driver = new FirefoxDriver();
	    driver.manage().window().maximize();
	    baseUrl = "http://localhost:8080/";
	    driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
	   
	  }
	  
	  /**
  	 * Test create new lecturer test case.
  	 * @author Dale Cusack
  	 * @throws Exception the exception
  	 */
  	@Test
	  @DatabaseSetup(value = "classpath:databaseEntries.xml", type = DatabaseOperation.CLEAN_INSERT)
	  public void testCreateNewLecturerTestCase() throws Exception {
		  driver.get(baseUrl + "/SpringWebProject/home");
		    driver.findElement(By.linkText("Menu Options")).click();
		    driver.findElement(By.partialLinkText("Add New")).click();
		    driver.findElement(By.linkText("Lecturer")).click();
		    driver.findElement(By.id("lectId")).clear();
		    driver.findElement(By.id("lectId")).sendKeys("L004");
		    driver.findElement(By.id("firstName")).clear();
		    driver.findElement(By.id("firstName")).sendKeys("Sarah");
		    driver.findElement(By.id("lastName")).clear();
		    driver.findElement(By.id("lastName")).sendKeys("O'Brien");
		    driver.findElement(By.id("email")).clear();
		    driver.findElement(By.id("email")).sendKeys("sarahobrien@cit.ie");
		    driver.findElement(By.cssSelector("input[type=\"submit\"]")).click();
		    
		    //instructing Selenium to wait for following page to load by searching for element on next page
		    WebDriverWait wait = new WebDriverWait(driver, 40);
		    WebElement element = wait.until(ExpectedConditions.elementToBeClickable(By.id("myTable")));
		    
		    lecturerJdbcDaoSupport = (LecturerJdbcDaoSupport) autoWireContext.getBean("lecturerJdbcDaoSupport");
			Lecturer actualLecturer= lecturerJdbcDaoSupport.getLecturer("L004");
			
			//Expected Name and Surname
			String expectedLecturerName= "Sarah";
			String expectedLecturerSurname= "O'Brien";
			
			//Test Expected vs Actual(Name and Surname)
			String actualLecturerName= actualLecturer.getFirstName();
			String actualLecturerSurname= actualLecturer.getLastName();
			assertEquals(expectedLecturerName, actualLecturerName);
			assertEquals(expectedLecturerSurname, actualLecturerSurname);
		    
		    
	  }
	  
	  /**
  	 * Test modify lecturer.
  	 * @author Dale Cusack
  	 * @throws Exception the exception
  	 */
  	@Test
	  @DatabaseSetup(value = "classpath:databaseEntries.xml", type = DatabaseOperation.CLEAN_INSERT)
	  public void testModifyLecturer() throws Exception {
		    driver.get(baseUrl + "/SpringWebProject/home");
		    driver.findElement(By.linkText("Menu Options")).click();
		    driver.findElement(By.partialLinkText("List All")).click();
		    driver.findElement(By.linkText("Lecturers")).click();
		    driver.findElement(By.linkText("Modify")).click();
		    driver.findElement(By.id("lastName")).clear();
		    driver.findElement(By.id("lastName")).sendKeys("Walsh");
		    driver.findElement(By.id("modify")).click();
		    
		    lecturerJdbcDaoSupport = (LecturerJdbcDaoSupport) autoWireContext.getBean("lecturerJdbcDaoSupport");
			Lecturer actualLecturer= lecturerJdbcDaoSupport.getLecturer("L001");
			
			//Expected Name and Surname
			String expectedLecturerName= "Mary";
			String expectedLecturerSurname= "Walsh";
			
			//Test Expected vs Actual(Name and Surname)
			String actualLecturerName= actualLecturer.getFirstName();
			String actualLecturerSurname= actualLecturer.getLastName();
			assertEquals(expectedLecturerName, actualLecturerName);
			assertEquals(expectedLecturerSurname, actualLecturerSurname);
		    
		  }
	  
	  		/**
		  	 * Test delete lecturer.
		  	 * @author Dale Cusack
		  	 * @throws Exception the exception
		  	 */
		  	@Test
	  		@DatabaseSetup(value = "classpath:databaseEntries.xml", type = DatabaseOperation.CLEAN_INSERT)
	  		 public void testDeleteLecturer() throws Exception {
	  		    driver.get(baseUrl + "/SpringWebProject/home");
	  		    driver.findElement(By.linkText("Menu Options")).click();
	  		    driver.findElement(By.partialLinkText("List All")).click();
	  		    driver.findElement(By.linkText("Lecturers")).click();
	  		    driver.findElement(By.linkText("L001")).click();
	  		    driver.findElement(By.linkText("Delete lecturer")).click();
	  		    driver.findElement(By.linkText("Delete")).click();
	  		    
	  		   //page loading not quick enough for execution,to slow down execution so changes come into effect 
	  		  try {
	  			WebDriverWait wait1 = new WebDriverWait(driver,5);
	  			WebElement elementa = wait1.until(ExpectedConditions.visibilityOfElementLocated(By.id("myTable")));
	  		  } catch (Exception e) {
	  			//e.printStackTrace();
	  		  }
	  		    
	  		    
	  		  lecturerJdbcDaoSupport = (LecturerJdbcDaoSupport) autoWireContext.getBean("lecturerJdbcDaoSupport");
	  		  List<Lecturer> lecturers=lecturerJdbcDaoSupport.listLecturers();
	  		  
	  		  assertEquals(2, lecturers.size());
	  		  }
	  		
	  		/**
		  	 * Tear down.
		  	 * @author Dale Cusack
		  	 * @throws Exception the exception
		  	 */
		  	@After
	  		public void tearDown() throws Exception {
	 	    driver.quit();
	 	    String verificationErrorString = verificationErrors.toString();
	 	    if (!"".equals(verificationErrorString)) {
	 	      fail(verificationErrorString);
	 	    }
	 	    
	 	  }

}
