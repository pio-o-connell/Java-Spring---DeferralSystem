
package com.grouptwo.controllers;

import java.util.Date;
import java.util.List;

import javax.servlet.ServletContext;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.ModelAndView;

import com.grouptwo.domain.Module;
import com.grouptwo.service.ModuleService;


@Controller
@RequestMapping("/module")
public class ModuleController {
	@Autowired
	ModuleService moduleService;
	@Autowired
	private ServletContext servletContext;
	
	@RequestMapping(value="/listall",method=RequestMethod.GET)
	public String listAll(ModelMap model){
		List<Module> listModules = moduleService.listModules();
		model.addAttribute("modules",listModules);
		Date date = new java.util.Date();
		model.addAttribute("now", date);
		return "displayModules";
	}
	
	@RequestMapping(value = "/advancedlist", method = RequestMethod.GET)
	public String advancedSearch() {
		return "displaySearchByStudentId";
	}
	
	@RequestMapping(value = "/advancedlist/studentId/{studentId}", method = RequestMethod.GET)
	public String listModulesByStudent(@PathVariable String studentId,
			ModelMap model) {
		Date date = new java.util.Date();
		List<Module> listModules = moduleService.listStudentModules(studentId);
		model.addAttribute("modules", listModules);
		model.addAttribute("now", date);
		return "displayModulesByStudentId";

	}
	
	@RequestMapping(value = "/addModule", method = RequestMethod.GET) 
	public ModelAndView addNewModule() {                                
		return new ModelAndView("newMAdd1", "modules", new Module());
		
	} 
	
	
	@RequestMapping(value = "/addModule", method = RequestMethod.POST)
	public String displayModule(@ModelAttribute("modules")Module module, BindingResult result,ModelMap model) {
		if (result.hasErrors()) {
			return "newMAdd1";
		}
	//	int crnNumber= Integer.parseInt(module.getCrnNumber());
		try {
			moduleService.createModule(module.getModuleId(), module.getCrnNumber(), module.getName(), module.getLectId(),module.getSemesterId());
			
		} catch (Exception e) {
			e.printStackTrace();
		}
		Date date= new java.util.Date();
	//	List<Module> listModules = moduleDAO.listModules();
	//	model.addAttribute("modules", listModules);
		model.addAttribute("moduleId",module.getModuleId());
		model.addAttribute("crnNumber",module.getCrnNumber());
		model.addAttribute("name",module.getName());
		model.addAttribute("lectId",module.getLectId());
		model.addAttribute("semesterId",module.getSemesterId());
		
		model.addAttribute("now", date);
		return "displayAddedModule1";
	} 
	
	
	
	
	@RequestMapping(value= "/delete/id/{moduleId}/crn/{crnNumber}", method = RequestMethod.GET)
	public String deleteModuleByIdByCRN(@PathVariable String moduleId ,@PathVariable int crnNumber, ModelMap model)
	{

		Module module = moduleService.getModule( moduleId, crnNumber);
		model.addAttribute("moduleId",moduleId);
		model.addAttribute("crnNumber",crnNumber);
		model.addAttribute("name",module.getName());
		model.addAttribute("lectId",module.getLectId());
		model.addAttribute("semesterId",module.getSemesterId());
		Date date= new java.util.Date();
		model.addAttribute("now", date);
		return "deleteModules";
	}


/*	@RequestMapping(value= "/modify/id/{moduleId}/crn/{crnNumber}", method = RequestMethod.GET)
	public String modifyModuleByIdByCRN(@PathVariable String moduleId ,@PathVariable int crnNumber, ModelMap model)
	{
		Module modules = moduleDAO.getModule( moduleId, crnNumber);
		model.addAttribute("modules",modules);
		System.out.println("...here...");
		return "modifyModule";	
	}
	*/
	
//	@RequestMapping(value= "/modify/id/{moduleId}/crn/{crnNumber}/name/{name}/semesterId/{semesterId}/lectId/{lectId}", method = RequestMethod.GET)
	@RequestMapping(value= "/modify/id/{moduleId}/crn/{crnNumber}/name/{name}", method = RequestMethod.GET)
	public String modifyModuleByIdByCRNbyName(@PathVariable String moduleId ,
											@PathVariable int crnNumber, 
											@PathVariable String name,
								//			@PathVariable String semesterId,
								//			@PathVariable String lectId,
											ModelMap model)
	
	{
		Module modules = moduleService.getModule( moduleId, crnNumber);
		
		//updateModuleName(String id, int crn, String name) {
		System.out.println("...here...");
		model.addAttribute("modules",modules);
	//	return "displayModifiedModule";	
		return "modifyModule";
	}

	
	
/*	@RequestMapping(value = "/modifyModule", method = RequestMethod.POST)
	public String displayModuleModify(
			@ModelAttribute("modules") Module Modules ,BindingResult result, ModelMap model) {
		System.out.println("here");
		if (result.hasErrors()) {
			return "modifyModule";
		}
		return "modifyModule";
	}*/
	
}	
	
	
